apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: my-awesome-cluster
  region: ap-south-1
  version: "1.29"
managedNodeGroups:
  - name: my-awesome-nodegroup
    amiFamily: AmazonLinux2
    instanceType: t3a.small
    spot: false
    minSize: 1
    maxSize: 2
    privateNetworking: true
    tags:
      k8s.io/cluster-autoscaler/enabled: "1"
      k8s.io/cluster-autoscaler/my-awesome-cluster: "1"
    securityGroups:
      attachIDs:
        - sg-073af896ee222aa00
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
vpc:
  subnets:
    private:
      ap-south-1a:
        id: subnet-0f514be4310b6a343
      ap-south-1b:
        id: subnet-0af92e1c6f35b5f6b
  clusterEndpoints:
    publicAccess: false
    privateAccess: true





   eksctl utils associate-iam-oidc-provider --region ap-south-1 --cluster my-awesome-cluster --approve
   curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/install/iam_policy.json
   

   aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json

eksctl create iamserviceaccount --cluster my-awesome-cluster --region ap-south-1 --namespace kube-system --name aws-load-balancer-controller --attach-policy-arn arn:aws:iam::730335550052:policy/AWSLoadBalancerControllerIAMPolicy --override-existing-serviceaccounts --approve

 helm repo add eks https://aws.github.io/eks-charts
 helm repo update
 
 kubectl apply -k github.com/aws/eks-charts/stable/aws-load-balancer-controller/crds?ref=master

 helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=my-awesome-cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller


https://www.middlewareinventory.com/blog/deploy-tomcat-kubernetes/